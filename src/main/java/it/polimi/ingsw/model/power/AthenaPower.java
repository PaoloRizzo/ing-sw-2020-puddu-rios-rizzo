package it.polimi.ingsw.model.power;

import it.polimi.ingsw.model.*;

import java.util.ArrayList;
import java.util.List;
/**
 *  Generate ActionTree and prune others ActionTrees for god Athena
 */
public class AthenaPower extends PowerStrategy {
    /**
     * This method prunes the action tree generated by the other player.
     * In this case it checks if the last turn of this player have a move up action. If it is true all move up actions in the tree and
     * the nexted branches will be erased.
     * @param board the current game board
     * @param myself that player that use the power
     * @param other the opponent player that play the actual turn
     * @param myLastTurn the last turn played by myself player
     * @param otherActionTree the action tree generate by opponent player
     */
    public void pruneOtherActionTree(Board board, Player myself, Player other, Turn myLastTurn, ActionTree otherActionTree){
        boolean prune = false;
        if(myLastTurn == null)
            prune = false;
        else{
            for(Action action: myLastTurn.getActions()){
                if(action instanceof MoveAction){
                    if(((MoveAction) action).getDirection() == Direction.UP)
                        prune = true;
                }
            }
        }
        if(prune)
            prune(otherActionTree);
    }

    /**
     * It erases all move up actions in the action tree and the nexted branches on its.
     * @param curr current pointer on action tree
     */
    public void prune(ActionTree curr){
        List<ActionTree> childrenToRemove = new ArrayList<>();
        for(ActionTree child: curr.getChildren()){
            if(child.getAction() instanceof MoveAction && ((MoveAction) child.getAction()).getDirection() == Direction.UP){
                childrenToRemove.add(child);
            }else
                prune(child);
        }
        for(ActionTree child: childrenToRemove){
            curr.removeChild(child);
        }
        if(childrenToRemove.size() > 0 && !curr.isWin() && curr.getChildren().size()==0){
            // lose
            curr.setLose(true);
            curr.setEndOfTurn(true);
        }
    }
}
